{
    "id": "ass",
    "version": "v0.4.0",
    "name": "Aegisub",
    "scopeName": "source.ass",
    "fileTypes": [
        "ass",
        "ssa"
    ],
    "uuid": "90101069-65f0-4834-a2fa-faad3b9d1400",
    "information_for_contributors": [
        "aster: 19260817@qq.com"
    ],
    "patterns": [
        {
            "include": "#comment"
        },
        {
            "include": "#block"
        },
        {
            "include": "#tags"
        },
        {
            "include": "#invalid"
        }
    ],
    "repository": {
        "comment": {
            "patterns": [
                {
                    "begin": "(^[ \\t]+)?(?=;)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.whitespace.comment.leading.ass"
                        }
                    },
                    "end": "(?!\\G)",
                    "patterns": [
                        {
                            "begin": ";",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.ass"
                                }
                            },
                            "end": "[\r\n]",
                            "name": "comment.line.semicolon.ass"
                        }
                    ]
                },
                {
                    "begin": "(Comment)(:)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.comment.ass"
                        },
                        "2": {
                            "name": "punctuation.definition.keyValue.ass"
                        }
                    },
                    "end": "[\r\n]",
                    "name": "comment.line.ass"
                }
            ]
        },
        "tags": {
            "patterns": [
                {
                    "begin": "(?:^[ \\t]+)?(Format)(:)",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.tag.ass"
                        },
                        "2": {
                            "name": "punctuation.definition.keyValue.ass"
                        }
                    },
                    "end": "[\r\n]",
                    "patterns": [
                        {
                            "match": ",",
                            "name": "punctuation.separator.ass"
                        },
                        {
                            "match": "\b([a-zA-Z]\\w*)",
                            "name": "storage.type.ass"
                        }
                    ]
                },
                {
                    "begin": "(?:^[ \\t]+)?(Style|Dialogue)(:)",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.tag.ass"
                        },
                        "2": {
                            "name": "punctuation.definition.keyValue.ass"
                        }
                    },
                    "end": "[\r\n]",
                    "patterns": [
                        {
                            "include": "#function"
                        },
                        {
                            "include": "#literal"
                        }
                    ]
                },
                {
                    "begin": "(?:^[ \\t]+)?([A-Za-z\\s]*)(:)",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.tag.ass"
                        },
                        "2": {
                            "name": "punctuation.definition.keyValue.ass"
                        }
                    },
                    "end": "[\r\n]",
                    "patterns": [
                        {
                            "match": "(?<!\\w)(-?\\d+(\\.\\d*)?)(?!\\w)",
                            "name": "constant.numeric.ass"
                        },
                        {
                            "match": "(?<!\\w)([^,]*)(?!\\w)",
                            "name": "string.literal.ass"
                        },
                        {
                            "include": "#invalid"
                        }
                    ]
                }
            ]
        },
        "block": {
            "patterns": [
                {
                    "match": "(?:^[ \\t]+)?(\\[)(.*)(\\])",
                    "name": "entity.name.section.group-title.ass",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.entity.ass"
                        },
                        "3": {
                            "name": "punctuation.definition.entity.ass"
                        }
                    }
                }
            ]
        },
        "literal": {
            "patterns": [
                {
                    "match": null,
                    "name": "punctuation.separator.ass"
                },
                {
                    "match": "\\d*:[0-5][0-9]:[0-5][0-9]\\.\\d{2}",
                    "name": "support.type.time.ass"
                },
                {
                    "match": "\\&H[0-9A-F]+",
                    "name": "support.type.color.ass"
                },
                {
                    "match": "-?\\d+(\\.\\d*)?",
                    "name": "constant.numeric.ass"
                },
                {
                    "match": "[^,\r\n]*",
                    "name": "string.literal.ass"
                }
            ]
        },
        "function": {
            "patterns": [
                {
                    "begin": "\\{",
                    "end": "\\}",
                    "patterns": [
                        {
                            "include": "#functions"
                        }
                    ]
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "match": "(\\\\)(an|)([0-9]+)",
                    "captures": {
                        "1": {
                            "name": "support.function.call.ass"
                        },
                        "2": {
                            "name": "support.function.with-number.ass"
                        },
                        "3": {
                            "name": "constant.numeric.ass"
                        }
                    }
                }
            ]
        },
        "invalid": {
            "patterns": [
                {
                    "match": "(.*)",
                    "name": "invalid.illegal.lyric"
                }
            ]
        }
    }
}
